program
  preprocessors
    preprocessor
      include-preprocessor
        #
        include
        <
        path
          file-or-dir
            stdio
            .
            h
        >
    preprocessors
  ext-defs
    ext-defs
      ext-defs
        ext-def
          decl
            decl-spec
              storage-class-spec?
              type-qualifier?
              type-spec
                struct-or-union-spec
                  struct-or-union
                    struct
                  __generic_programming114514XJ
                  {
                  struct-decls*
                    struct-decls*
                      struct-decls*
                      struct-decl
                        decl-spec
                          storage-class-spec?
                          type-qualifier?
                          type-spec
                            int
                        struct-declarator-list
                          struct-declarator
                            declarator
                              direct-declarator
                                i
                            :
                            expr
                              unary-expr
                                postfix-expr
                                  primary-expr
                                    4
                        ;
                    struct-decl
                      decl-spec
                        storage-class-spec?
                        type-qualifier?
                        type-spec
                          char
                      struct-declarator-list
                        struct-declarator
                          declarator
                            direct-declarator
                              ch
                      ;
                  }
            init-declarator-list?
            ;
      ext-def
        func-def
          decl-spec
            storage-class-spec?
            type-qualifier?
            type-spec
              int
          func-direct-declarator
            direct-declarator
              gcd
            (
            param-type-list?
              param-type-list
                param-type-list
                  param-decl
                    decl-spec
                      storage-class-spec?
                      type-qualifier?
                      type-spec
                        int
                    declarator
                      direct-declarator
                        x
                ,
                param-decl
                  decl-spec
                    storage-class-spec?
                    type-qualifier?
                    type-spec
                      int
                  declarator
                    direct-declarator
                      y
            )
          ;
    ext-def
      func-def
        decl-spec
          storage-class-spec?
          type-qualifier?
          type-spec
            int
        func-direct-declarator
          direct-declarator
            main
          (
          param-type-list?
          )
        compound-stmt
          {
          decl-or-stmts*
            decl-or-stmts*
              decl-or-stmts*
                decl-or-stmts*
                  decl-or-stmts*
                  decl-or-stmt
                    decl
                      decl-spec
                        storage-class-spec?
                        type-qualifier?
                        type-spec
                          char
                      init-declarator-list?
                        init-declarator-list
                          init-declarator
                            declarator
                              ptr?
                                ptr
                                  *
                                  type-qualifiers*
                              direct-declarator
                                n
                      ;
                decl-or-stmt
                  stmt
                    selection-stmt
                      if
                      (
                      expr
                        unary-expr
                          postfix-expr
                            primary-expr
                              n
                        binary-op
                          ==
                        expr
                          unary-expr
                            postfix-expr
                              primary-expr
                                NULL
                      )
                      stmt
                        compound-stmt
                          {
                          decl-or-stmts*
                            decl-or-stmts*
                            decl-or-stmt
                              decl
                                decl-spec
                                  storage-class-spec?
                                  type-qualifier?
                                  type-spec
                                    double
                                init-declarator-list?
                                  init-declarator-list
                                    init-declarator
                                      declarator
                                        direct-declarator
                                          array-direct-declarator
                                            direct-declarator
                                              d
                                            [
                                            expr?
                                              expr
                                                unary-expr
                                                  postfix-expr
                                                    primary-expr
                                                      554
                                            ]
                                ;
                          }
                      else
                      stmt
                        selection-stmt
                          if
                          (
                          expr
                            unary-expr
                              postfix-expr
                                primary-expr
                                  kkk
                          )
                          stmt
                            compound-stmt
                              {
                              decl-or-stmts*
                                decl-or-stmts*
                                decl-or-stmt
                                  stmt
                                    jump-stmt
                                      goto
                                      end
                                      ;
                              }
                          else
                          stmt
                            compound-stmt
                              {
                              decl-or-stmts*
                                decl-or-stmts*
                                decl-or-stmt
                                  stmt
                                    selection-stmt
                                      switch
                                      (
                                      expr
                                        unary-expr
                                          unary-op
                                            &
                                          cast-expr
                                            unary-expr
                                              postfix-expr
                                                primary-expr
                                                  n
                                      )
                                      stmt
                                        compound-stmt
                                          {
                                          decl-or-stmts*
                                            decl-or-stmts*
                                              decl-or-stmts*
                                              decl-or-stmt
                                                stmt
                                                  label-stmt
                                                    case
                                                    expr
                                                      unary-expr
                                                        postfix-expr
                                                          primary-expr
                                                            1
                                                    :
                                                    stmt
                                                      label-stmt
                                                        case
                                                        expr
                                                          unary-expr
                                                            postfix-expr
                                                              primary-expr
                                                                2
                                                        :
                                                        stmt
                                                          label-stmt
                                                            case
                                                            expr
                                                              unary-expr
                                                                postfix-expr
                                                                  primary-expr
                                                                    3
                                                            :
                                                            stmt
                                                              jump-stmt
                                                                break
                                                                ;
                                            decl-or-stmt
                                              stmt
                                                label-stmt
                                                  case
                                                  expr
                                                    unary-expr
                                                      postfix-expr
                                                        primary-expr
                                                          5
                                                  :
                                                  stmt
                                                    compound-stmt
                                                      {
                                                      decl-or-stmts*
                                                        decl-or-stmts*
                                                        decl-or-stmt
                                                          stmt
                                                            expr-stmt
                                                              expr
                                                                unary-expr
                                                                  postfix-expr
                                                                    primary-expr
                                                                      func-call
                                                                        printf
                                                                        (
                                                                        actual-params
                                                                          actual-params
                                                                            expr
                                                                              unary-expr
                                                                                postfix-expr
                                                                                  primary-expr
                                                                                    "%d"
                                                                          ,
                                                                          expr
                                                                            unary-expr
                                                                              postfix-expr
                                                                                primary-expr
                                                                                  5
                                                                            binary-op
                                                                              +
                                                                            expr
                                                                              unary-expr
                                                                                postfix-expr
                                                                                  primary-expr
                                                                                    func-call
                                                                                      gcd
                                                                                      (
                                                                                      actual-params
                                                                                        actual-params
                                                                                          expr
                                                                                            unary-expr
                                                                                              postfix-expr
                                                                                                primary-expr
                                                                                                  x
                                                                                        ,
                                                                                        expr
                                                                                          unary-expr
                                                                                            postfix-expr
                                                                                              postfix-expr
                                                                                                primary-expr
                                                                                                  y
                                                                                              --
                                                                                          binary-op
                                                                                            |
                                                                                          expr
                                                                                            unary-expr
                                                                                              postfix-expr
                                                                                                primary-expr
                                                                                                  1
                                                                                      )
                                                                              binary-op
                                                                                ||
                                                                              expr
                                                                                unary-expr
                                                                                  unary-op
                                                                                    &
                                                                                  cast-expr
                                                                                    unary-expr
                                                                                      postfix-expr
                                                                                        primary-expr
                                                                                          n
                                                                        )
                                                              ;
                                                      }
                                          }
                              }
              decl-or-stmt
                stmt
                  iter-stmt
                    while
                    (
                    expr
                      unary-expr
                        postfix-expr
                          primary-expr
                            1
                    )
                    stmt
                      compound-stmt
                        {
                        decl-or-stmts*
                          decl-or-stmts*
                          decl-or-stmt
                            stmt
                              iter-stmt
                                for
                                (
                                decl
                                  decl-spec
                                    storage-class-spec?
                                    type-qualifier?
                                    type-spec
                                      int
                                  init-declarator-list?
                                    init-declarator-list
                                      init-declarator
                                        declarator
                                          direct-declarator
                                            i
                                        =
                                        initializer
                                          expr
                                            unary-expr
                                              postfix-expr
                                                primary-expr
                                                  0x19f
                                  ;
                                expr?
                                  expr
                                    unary-expr
                                      postfix-expr
                                        primary-expr
                                          i
                                    binary-op
                                      <
                                    expr
                                      unary-expr
                                        postfix-expr
                                          primary-expr
                                            .336
                                ;
                                expr?
                                  expr
                                    unary-expr
                                      ++
                                      unary-expr
                                        postfix-expr
                                          primary-expr
                                            i
                                )
                                stmt
                                  compound-stmt
                                    {
                                    decl-or-stmts*
                                      decl-or-stmts*
                                      decl-or-stmt
                                        stmt
                                          iter-stmt
                                            do
                                            stmt
                                              compound-stmt
                                                {
                                                decl-or-stmts*
                                                  decl-or-stmts*
                                                    decl-or-stmts*
                                                      decl-or-stmts*
                                                      decl-or-stmt
                                                        decl
                                                          decl-spec
                                                            storage-class-spec?
                                                            type-qualifier?
                                                            type-spec
                                                              int
                                                          init-declarator-list?
                                                            init-declarator-list
                                                              init-declarator
                                                                declarator
                                                                  direct-declarator
                                                                    j
                                                                =
                                                                initializer
                                                                  expr
                                                                    unary-expr
                                                                      postfix-expr
                                                                        primary-expr
                                                                          0
                                                          ;
                                                    decl-or-stmt
                                                      stmt
                                                        expr-stmt
                                                          expr
                                                            unary-expr
                                                              postfix-expr
                                                                primary-expr
                                                                  (
                                                                  expr
                                                                    unary-expr
                                                                      ++
                                                                      unary-expr
                                                                        postfix-expr
                                                                          primary-expr
                                                                            j
                                                                  )
                                                            binary-op
                                                              -
                                                            expr
                                                              unary-expr
                                                                postfix-expr
                                                                  primary-expr
                                                                    1
                                                          ;
                                                  decl-or-stmt
                                                    stmt
                                                      iter-stmt
                                                        for
                                                        (
                                                        expr?
                                                          expr
                                                            unary-expr
                                                              postfix-expr
                                                                primary-expr
                                                                  j
                                                            assign-op
                                                              =
                                                            expr
                                                              unary-expr
                                                                postfix-expr
                                                                  primary-expr
                                                                    0
                                                        ;
                                                        expr?
                                                        ;
                                                        expr?
                                                        )
                                                        stmt
                                                          compound-stmt
                                                            {
                                                            decl-or-stmts*
                                                              decl-or-stmts*
                                                              decl-or-stmt
                                                                stmt
                                                                  jump-stmt
                                                                    continue
                                                                    ;
                                                            }
                                                }
                                            while
                                            (
                                            expr
                                              unary-expr
                                                postfix-expr
                                                  primary-expr
                                                    0
                                            )
                                            ;
                                    }
                        }
            decl-or-stmt
              stmt
                label-stmt
                  end
                  :
                  stmt
                    jump-stmt
                      return
                      expr?
                        expr
                          unary-expr
                            postfix-expr
                              primary-expr
                                0
                      ;
          }


